// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionAPI.Persistence.Contexts;

#nullable disable

namespace OnionAPI.Persistence.Migrations
{
    [DbContext(typeof(OnionAPIDbContext))]
    [Migration("20230705202413_mig3")]
    partial class mig3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnionAPI.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OnionAPI.Domain.Entities.Mudurluk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Boylam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enlem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MudurlukAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MudurlukBolgeKodu")
                        .HasColumnType("int");

                    b.Property<int>("MudurlukKodu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mudurlukler");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc08d56c-08da-4689-8a13-3be5f5724bb7"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5577),
                            Enlem = "",
                            MudurlukAdi = "BALIKESİR",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 1
                        },
                        new
                        {
                            Id = new Guid("9b97c6e9-094d-46a0-a632-c64ea3ebe947"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5645),
                            Enlem = "",
                            MudurlukAdi = "EDREMİT",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 2
                        },
                        new
                        {
                            Id = new Guid("08ac6656-2a24-4a20-8d62-5521f888080c"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5647),
                            Enlem = "",
                            MudurlukAdi = "BANDIRMA",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 3
                        },
                        new
                        {
                            Id = new Guid("e497a112-ced8-42b8-8181-8e605310223e"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5649),
                            Enlem = "",
                            MudurlukAdi = "ÇANAKKALE",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 4
                        },
                        new
                        {
                            Id = new Guid("3e48217e-5628-4bad-8402-98e180197552"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5651),
                            Enlem = "",
                            MudurlukAdi = "BİGA",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 5
                        },
                        new
                        {
                            Id = new Guid("786b2e85-d113-47f0-bdfd-eb581666a15b"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5653),
                            Enlem = "",
                            MudurlukAdi = "YALOVA",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 6
                        },
                        new
                        {
                            Id = new Guid("52eaee61-be42-408b-a4db-21d6565152db"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5666),
                            Enlem = "",
                            MudurlukAdi = "OSMANGAZİ",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 7
                        },
                        new
                        {
                            Id = new Guid("41d65b69-b698-4766-b676-15b9149e66ef"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5668),
                            Enlem = "",
                            MudurlukAdi = "GEMLİK",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 8
                        },
                        new
                        {
                            Id = new Guid("472ea8fc-149a-4f0d-b6d2-e3f528d284a0"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5670),
                            Enlem = "",
                            MudurlukAdi = "İNEGÖL",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 9
                        },
                        new
                        {
                            Id = new Guid("59da4d64-5a4e-4f1f-a2cd-5f7e782f319e"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5671),
                            Enlem = "",
                            MudurlukAdi = "M.KEMALPAŞA",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 10
                        },
                        new
                        {
                            Id = new Guid("fde04bc6-bf93-46a9-9ded-cba411d86861"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5673),
                            Enlem = "",
                            MudurlukAdi = "NİLÜFER",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 11
                        },
                        new
                        {
                            Id = new Guid("e7d50ab9-972e-4bea-97cd-83b378daf358"),
                            Boylam = "",
                            CreatedDate = new DateTime(2023, 7, 5, 23, 24, 12, 943, DateTimeKind.Local).AddTicks(5674),
                            Enlem = "",
                            MudurlukAdi = "YILDIRIM",
                            MudurlukBolgeKodu = 0,
                            MudurlukKodu = 12
                        });
                });

            modelBuilder.Entity("OnionAPI.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomerId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnionAPI.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<Guid>("OrdersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("OnionAPI.Domain.Entities.Order", b =>
                {
                    b.HasOne("OnionAPI.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("OnionAPI.Domain.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnionAPI.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnionAPI.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
